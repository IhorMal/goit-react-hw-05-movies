{"version":3,"file":"static/js/597.6b76b6cc.chunk.js","mappings":"uQAAA,IAAMA,EAAO,mCAEN,SAASC,IAEX,OADSC,MAAM,2DAAD,OAA4DF,IAC/DG,MAAK,SAAAC,GACb,OAAOA,EAAIC,MACd,GACJ,CAEM,SAASC,EAAaC,GAEzB,OADYL,MAAM,qDAAD,OAAsDF,EAAtD,iCAAsFO,EAAtF,YACNJ,MAAK,SAAAC,GACZ,OAAOA,EAAIC,MACd,GACJ,CAEM,SAASG,EAAaC,GAEzB,OADYP,MAAM,sCAAD,OAAuCO,EAAvC,oBAAqDT,EAArD,oBACNG,MAAK,SAAAC,GACZ,OAAOA,EAAIC,MACd,GACJ,CAEM,SAASK,EAAaD,GAEzB,OADYP,MAAM,sCAAD,OAAuCO,EAAvC,4BAA6DT,EAA7D,oBACNG,MAAK,SAAAC,GACZ,OAAOA,EAAIC,MACd,GACJ,CACM,SAASM,EAAaF,GAGzB,OAFYP,MAAM,wCAAD,OACgBO,EADhB,4BACsCT,EADtC,2BAENG,MAAK,SAAAC,GACZ,OAAOA,EAAIC,MACd,GACJ,C,8ECWD,UA1Ca,WACT,OAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAUR,OARAO,EAAAA,EAAAA,YAAU,YACNN,EAAAA,EAAAA,IAAaD,GAAIN,MAAK,SAAAc,GAElBH,EAAQG,EAAIJ,KACf,GAEJ,GAAE,CAACJ,IAECI,GAKD,2BACqB,IAAhBA,EAAKK,QACF,wBACKL,EAAKM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcb,EAA0B,EAA1BA,KAAMc,EAAoB,EAApBA,UAAWZ,EAAS,EAATA,GACxC,OACI,0BACKW,GAAgB,gBAAKE,IAAG,0CAAqCF,GAAgBG,IAAKhB,KAC9E,oCAGL,kCAAUA,MACV,uCAAec,OANVZ,EAShB,OAEJ,oDAEL,SAAC,EAAAe,SAAD,CAAUC,UAAU,gDAApB,UACJ,SAAC,KAAD,SAvBO,IA2Bd,C","sources":["Requests/Api.jsx","components/Cast.jsx"],"sourcesContent":["const API_KEY = `c77f748b921c87e18a4a8be3b6f2e99b`;\n\nexport function ApiPoporali() {\n    let get = fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n     return get.then(par => {\n        return par.json()\n    })\n}\n\nexport function searchMovies(name) {\n    const get = fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1`)\n    return get.then(par => {\n        return par.json()\n    })\n}\n\nexport function movieDetails(id) {\n    const get = fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return get.then(par => {\n        return par.json()\n    })\n}\n\nexport function movieCredits(id) {\n    const get = fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n    return get.then(par => {\n        return par.json()\n    })\n}\nexport function movieReviews(id) {\n    const get = fetch(`\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return get.then(par => {\n        return par.json()\n    })\n}","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, Suspense} from 'react'\nimport { movieCredits } from \"../Requests/Api\"\nimport { Outlet } from \"react-router-dom\";\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { id } = useParams();\n   \n    useEffect(() => {\n        movieCredits(id).then(pro => {\n       \n            setCast(pro.cast);\n        });\n        \n    }, [id])\n  \n    if (!cast) {\n        return null\n    }\n    \n    return (\n        <div>      \n            {cast.length !== 0 ? (\n                <ul>                 \n                    {cast.map(({ profile_path, name, character, id }) => {                      \n                        return (\n                            <li key={id}>\n                                {profile_path ? (<img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />) :\n                                    (<p>no Foro</p>)\n                                }\n                            \n                                <p>Name: {name}</p>\n                                <p>Character: {character}</p>\n                            </li>\n                        )\n                    })}\n                </ul>            \n            ) : (<p>There is no information</p>)}   \n            \n            <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n        </div>    \n    )\n};\n\nexport default Cast;"],"names":["API_KEY","ApiPoporali","fetch","then","par","json","searchMovies","name","movieDetails","id","movieCredits","movieReviews","useState","cast","setCast","useParams","useEffect","pro","length","map","profile_path","character","src","alt","Suspense","fallback"],"sourceRoot":""}